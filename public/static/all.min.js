!function (e) {
    "use strict";
    var t = window.VAMTAM = window.VAMTAM || {};
    t.debounce = function (e, t, n) {
        var a;
        return function () {
            var o = this, i = arguments, r = n && !a;
            clearTimeout(a), a = setTimeout(function () {
                a = null, n || e.apply(o, i)
            }, t), r && e.apply(o, i)
        }
    }, t.offset = function (e) {
        var t = e.getBoundingClientRect(), n = window.pageXOffset || document.documentElement.scrollLeft,
            a = window.pageYOffset || document.documentElement.scrollTop;
        return {top: t.top + a, left: t.left + n}
    }, t.scroll_handlers = [], t.latestKnownScrollY = 0;
    var n = !1;
    t.addScrollHandler = function (e) {
        requestAnimationFrame(function () {
            e.init(), t.scroll_handlers.push(e), e.measure(t.latestKnownScrollY), e.mutate(t.latestKnownScrollY)
        })
    }, t.onScroll = function () {
        t.latestKnownScrollY = window.pageYOffset, n || (n = !0, requestAnimationFrame(function () {
            var e;
            for (e = 0; e < t.scroll_handlers.length; e++) t.scroll_handlers[e].measure(t.latestKnownScrollY);
            for (e = 0; e < t.scroll_handlers.length; e++) t.scroll_handlers[e].mutate(t.latestKnownScrollY);
            n = !1
        }))
    }, window.addEventListener("scroll", t.onScroll, {passive: !0}), t.load_script = function (e, t) {
        var n = document.createElement("script");
        n.type = "text/javascript", n.async = !0, n.src = e, t && (n.onload = t), document.getElementsByTagName("script")[0].before(n)
    }, t.load_style = function (e, t, n, a) {
        var o = document.createElement("link");
        o.rel = "stylesheet", o.type = "text/css", o.media = t, o.href = e, n && (o.onload = n), a ? a.after(o) : document.getElementsByTagName("link")[0].before(o)
    }, t.isBelowMaxDeviceWidth = function () {
        return !window.matchMedia("(min-width: " + VAMTAM_FRONT.max_breakpoint + "px)").matches
    }, t.isMaxDeviceWidth = function () {
        return window.matchMedia("(min-width: " + VAMTAM_FRONT.max_breakpoint + "px)").matches
    }
}(), function (e, t, n) {
    "use strict";
    var a, o, i = e("header.main-header").find(".header-contents"),
        r = document.getElementById("vamtam-fallback-main-menu-toggle"),
        s = document.querySelector("#main-menu > .mega-menu-wrap > .mega-menu-toggle"), c = function () {
            clearTimeout(a), a = setTimeout(d, 200)
        }, d = function () {
            window.removeEventListener("scroll", c, {passive: !0}), t.blockStickyHeaderAnimation = !1, o && o()
        }, l = function (e, n, a) {
            requestAnimationFrame(function () {
                var n = e.offset().top;
                t.blockStickyHeaderAnimation = !0;
                var d;
                d = i.height();
                var l = n - t.adminBarHeight - d;
                o = a, window.addEventListener("scroll", c, {passive: !0}), window.scroll({
                    left: 0,
                    top: l,
                    behavior: "smooth"
                }), e.attr("id") && (history.pushState ? history.pushState(null, null, "#" + e.attr("id")) : window.location.hash = e.attr("id")), r && r.classList.remove("mega-menu-open"), s && s.classList.remove("mega-menu-open")
            })
        };
    if (e(document.body).on("click", ".vamtam-animated-page-scroll[href], .vamtam-animated-page-scroll [href], .vamtam-animated-page-scroll [data-href]", function (t) {
        var n = e(this).prop("href") || e(this).data("href"), a = e("#" + n.split("#")[1]),
            o = document.createElement("a");
        o.href = n, a.length && o.pathname === window.location.pathname && (r.classList.remove("mega-menu-open"), s.classList.remove("mega-menu-open"), l(a), t.preventDefault())
    }), "" !== window.location.hash && (e('.vamtam-animated-page-scroll[href*="' + window.location.hash + '"]').length || e('.vamtam-animated-page-scroll [href*="' + window.location.hash + '"]').length || e('.vamtam-animated-page-scroll [data-href*="' + window.location.hash + '"]').length)) {
        var m = e(window.location.hash);
        m.length > 0 && e(window).add("html, body, #page").scrollTop(0), setTimeout(function () {
            l(m)
        }, 400)
    }
}(jQuery, window.VAMTAM), function (e, t) {
    "use strict";
    window.VAMTAM = window.VAMTAM || {}, e(function () {
        var t, n;
        window.VAMTAM.adminBarHeight = document.body.classList.contains("admin-bar") ? 32 : 0, /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && requestAnimationFrame(function () {
            document.documentElement.classList.add("ios-safari")
        }), n = document.body, window.addEventListener("scroll", function () {
            clearTimeout(t), requestAnimationFrame(function () {
                n.classList.add("disable-hover"), t = setTimeout(function () {
                    n.classList.remove("disable-hover")
                }, 300)
            })
        }, {passive: !0}), document.addEventListener("click", function (e) {
            e.target.closest(".vamtam-trigger-print") && (window.print(), e.preventDefault())
        }), window.VAMTAM.resizeElements = function () {
            e("#page .media-inner,\t\t\t\t.wp-block-embed-vimeo:not(.wp-has-aspect-ratio),\t\t\t\t:not(.wp-block-embed__wrapper) > .vamtam-video-frame").find("iframe, object, embed, video").each(function () {
                setTimeout(function () {
                    requestAnimationFrame(function () {
                        var t = this.offsetWidth;
                        this.style.width = "100%", "0" === this.width && "0" === this.height ? this.style.height = 9 * t / 16 + "px" : this.style.height = this.height * t / this.width + "px", e(this).trigger("vamtam-video-resized")
                    }.bind(this))
                }.bind(this), 50)
            }), setTimeout(function () {
                requestAnimationFrame(function () {
                    e(".mejs-time-rail").css("width", "-=1px")
                })
            }, 100)
        }, window.addEventListener("resize", window.VAMTAM.debounce(window.VAMTAM.resizeElements, 100), !1), window.VAMTAM.resizeElements()
    });
    var n = function () {
        var t = document.querySelectorAll(".vamtam-overlay-trigger"), n = [], a = window.VAMTAM.isBelowMaxDeviceWidth(),
            o = function (t) {
                var a = t.currentTarget;
                if (e(a).hasClass("elementor-menu-toggle")) {
                    var i = e(a).closest(".elementor-row");
                    i.length || (i = e(a).closest(".elementor-container")), i.hasClass("vamtam-overlay-trigger--overlay") && (i.removeClass("vamtam-overlay-trigger--overlay"), a.removeEventListener("click", o), n.forEach(function (e) {
                        e.overlayTarget !== a && e.closeTrigger !== a || (e.isActive = !1)
                    }))
                }
                e(".vamtam-overlay-trigger--overlay .vamtam-overlay-element:visible").length < 2 && (e("html, body").removeClass("vamtam-disable-scroll"), e("#scroll-to-top").removeClass("hidden"))
            }, i = function (t) {
                var a = t.currentTarget;
                if (e(a).hasClass("elementor-menu-toggle")) {
                    var i = e(a).closest(".elementor-row");
                    if (i.length || (i = e(a).closest(".elementor-container")), i.hasClass("vamtam-menu-nav-overlay-inside") || (i.addClass("vamtam-menu-nav-overlay-inside"), e(i).find(".vamtam-overlay-element").css("top", e(i)[0].getBoundingClientRect().top + e(i).height() + "px")), i.hasClass("vamtam-overlay-trigger--overlay")) return;
                    i.addClass("vamtam-overlay-trigger--overlay"), n.forEach(function (e) {
                        e.overlayTarget !== a && e.closeTrigger !== a || (e.isActive = !0)
                    })
                }
                e("html, body").addClass("vamtam-disable-scroll"), e("#scroll-to-top").addClass("hidden"), function (t) {
                    if (e(t).hasClass("elementor-menu-toggle")) t.removeEventListener("click", o), t.addEventListener("click", o)
                }(a)
            };
        if (t.forEach(function (t) {
            if (e(t).hasClass("elementor-widget-nav-menu")) {
                var a = e(t).find(".elementor-menu-toggle")[0];
                a.removeEventListener("click", i), a.addEventListener("click", i), n.push({
                    overlayTarget: t,
                    closeTrigger: a,
                    isActive: !1
                });
                var o = e(t).closest(".elementor-row");
                return o.length || (o = e(t).closest(".elementor-container")), void e('<span class="vamtam-overlay-element"></span>').appendTo(o)
            }
        }), t.length) {
            document.addEventListener("click", function (e) {
                n.forEach(function (t) {
                    t.isActive && (e.target === t.overlayTarget || t.overlayTarget.contains(e.target) || t.closeTrigger.click())
                })
            }, !0), window.addEventListener("resize", window.VAMTAM.debounce(function () {
                var e = window.VAMTAM.isBelowMaxDeviceWidth();
                a !== e && (n.forEach(function (e) {
                    e.isActive && e.closeTrigger.click()
                }), a = e)
            }, 200), !1)
        }
    };
    document.addEventListener("DOMContentLoaded", function () {
         window.CSS && window.CSS.supports && window.CSS.supports("(--foo: red)") || (window.VAMTAM.load_script(VAMTAM_FRONT.jspath + "plugins/thirdparty/css-variables-polyfill.js"), window.VAMTAM.load_script(VAMTAM_FRONT.jspath + "polyfills.js"), window.VAMTAM.load_style(VAMTAM_FRONT.jspath + "../css/dist/ie11.css", "all")), n()
    }, {passive: !0})
}(jQuery), function (e, t) {
    "use strict";
    window.Cookies = window.Cookies || {
        get: function (e) {
            var t = ("; " + document.cookie).split("; " + e + "=");
            if (2 === t.length) return t.pop().split(";").shift()
        }
    }, e(function () {
        var t = e(".fixed-header-box .cart-dropdown"), n = e(".vamtam-cart-dropdown-link"), a = e(".products", n),
            o = e(".elementor-widget-woocommerce-menu-cart"), i = o.length,
            r = i && e(o).find(".vamtam-elementor-menu-cart__header .item-count"),
            s = "wc_add_to_cart_params" in window && window.wc_add_to_cart_params.is_cart;

        function c() {
            s && document.querySelectorAll(".woocommerce-cart-form__contents").forEach(function (t) {
                !e(t).hasClass("shop_table") && !e(t).parent().hasClass("vamtam-cart-main") && e(t).removeClass("woocommerce-cart-form__contents")
            })
        }

        function d() {
            var t = e(o).find(".elementor-menu-cart__container").last(),
                n = document.body.getBoundingClientRect().width, a = window.VAMTAM.adminBarHeight,
                i = e(t).closest(".elementor-section-wrap").find(".elementor-row").first();
            i.length || (i = e(t).closest(".elementor-section-wrap").find(".elementor-container").first());
            var r = e(i)[0].getBoundingClientRect().top;
            r < 0 && (r = 0);
            var s = window.innerWidth - n;
            if (e(t).css("top", -r + a + "px"), e(t).css({width: "calc(100vw - " + s + "px)"}), a) {
                var c = "calc(100vh - " + a + "px)";
                e(t).css({height: c}), e(".vamtam-disable-scroll").css({"max-height": c})
            }
        }

        var l = function (t) {
            if (t.preventDefault(), s) return t.stopImmediatePropagation(), !1;
            e("body").addClass("vamtam-disable-scroll"), e("#scroll-to-top").addClass("hidden");
            var n = e(t.target).closest(".elementor-section-wrap").find("section.elementor-element").first();
            n.css("will-change", "transform"), n.css("z-index", "1000"), d()
        }, m = function (t, n) {
            (e(t.target).hasClass("elementor-menu-cart__container") || e(t.target).hasClass("vamtam-close-cart") || "no-target" === t && n) && (window.VAMTAM.adminBarHeight && e(".vamtam-disable-scroll").css({"max-height": ""}), e("body").removeClass("vamtam-disable-scroll"), e("#scroll-to-top").removeClass("hidden"), e(t.target).closest("section.elementor-element").css("z-index", ""))
        };

        function u() {
            document.querySelectorAll("#elementor-menu-cart__toggle_button").forEach(function (e) {
                e.removeEventListener("click", l), e.addEventListener("click", l)
            }), document.querySelectorAll(".elementor-menu-cart__container .elementor-menu-cart__close-button, .elementor-menu-cart__container").forEach(function (e) {
                e.removeEventListener("click", m), e.addEventListener("click", m)
            })
        }

        function f(t) {
            var n = e("#scroll-to-top.vamtam-scroll-to-top");
            n.length && (t ? n.css("bottom", "10px") : n.css("bottom", "95px"))
        }

        function v(t) {
            if (t) {
                e(".woocommerce-notices-wrapper").empty().append(t);
                var n = e(".woocommerce-notices-wrapper").find(".vamtam-close-notice-btn");
                n[0].addEventListener("click", function () {
                    var t = e(this).closest(".woocommerce-message");
                    t.fadeOut("fast"), f(!0), setTimeout(function () {
                        t.remove()
                    }, 2e3)
                }), setTimeout(function () {
                    var e = n.closest(".woocommerce-message");
                    e.fadeOut("fast"), setTimeout(function () {
                        e.remove(), f(!0)
                    }, 2e3)
                }, 1e4)
            }
        }

        e(document.body).on("added_to_cart removed_from_cart wc_fragments_refreshed wc_fragments_loaded", function () {
            if (parseInt(Cookies.get("woocommerce_items_in_cart") || 0, 10) > 0) if (i) {
                o.removeClass("hidden");
                var n = 0;
                o[0].querySelectorAll(".cart_item .quantity select").forEach(function (e) {
                    n += parseInt(e.value, 10)
                }), r.text("(" + n + ")")
            } else {
                for (var s = 0, d = document.querySelector(".widget_shopping_cart").querySelectorAll("li .quantity"), l = 0; l < d.length; l++) s += parseInt(d[l].innerHTML.split("<span")[0].replace(/[^\d]/g, ""), 10);
                s = s >= 0 ? s : "", a.text(s), a.removeClass("cart-empty"), t.removeClass("hidden")
            } else if (i) {
                var v = o.hasClass("elementor-menu-cart--empty-indicator-hide");
                o.toggleClass("hidden", v), r.text("(0)"), m("no-target", !0)
            } else {
                var h = t.hasClass("show-if-empty");
                a.addClass("cart-empty"), a.text("0"), t.toggleClass("hidden", !h)
            }
            !!e("body").hasClass("single-product") && e(".woocommerce-notices-wrapper .woocommerce-message").length && f(), u(), function () {
                var t = e(".woocommerce-cart input#coupon_code");
                if (t.length) {
                    var n = function () {
                        var n = e(t).parent().find('input[type="submit"]');
                        this.value.length ? e(n).removeClass("hidden") : e(n).addClass("hidden")
                    };
                    t[0].removeEventListener("input", n), t[0].addEventListener("input", n)
                }
            }(), c()
        }), e(document).on("click", ".single_add_to_cart_button", function (t) {
            t.preventDefault();
            var n = e(this), a = n.closest("form.cart"), o = n.val(), r = a.find("input[name=quantity]").val() || 1,
                s = a.find("input[name=product_id]").val() || o, c = a.find("input[name=variation_id]").val() || 0,
                d = a.find("input[name=add-to-cart].wc-booking-product-id").val(), l = a.hasClass("grouped_form"),
                m = {};
            if (l) {
                s = parseInt(a.find("input[name=add-to-cart]").val());
                var u = a.find('[id^="product-"]');
                e.each(u, function (t, n) {
                    var a, o = e(n).find(".add_to_cart_button"), i = e(n).attr("id").substr(8);
                    a = o.length ? parseInt(o.attr("data-quantity")) || 0 : parseInt(e(n).find("input.qty").val()) || 0, m[i] = a
                })
            }
            var f = {};
            d ? (new FormData(a[0]).forEach(function (e, t) {
                "add-to-cart" === t ? f.product_id = e : f[t.replace("wc_bookings_field", "")] = e, f[t] = e
            }), f.is_wc_booking = !0) : f = l ? {product_id: s, products: m, is_grouped: !0} : {product_id: s};
            return f.product_sku = "", f.quantity = r, f.variation_id = c, f.action = "woocommerce_ajax_add_to_cart", e(document.body).trigger("adding_to_cart", [n, f]), e.ajax({
                type: "post",
                url: window.wc_add_to_cart_params.ajax_url,
                data: f,
                beforeSend: function () {
                    n.removeClass("added").addClass("loading")
                },
                complete: function (e) {
                    e.error ? n.removeClass("loading") : n.addClass("added").removeClass("loading")
                },
                success: function (t) {
                    t.error ? (v(t.notice), e(document.body).trigger("wc_fragments_refreshed")) : (i ? document.querySelectorAll("#elementor-menu-cart__toggle_button").forEach(function (e) {
                        e.click()
                    }) : v(t.fragments.notice), e(document.body).trigger("added_to_cart", [t.fragments, t.cart_hash, n]))
                }
            }), !1
        }), e(document).on("click", ".mini_cart_item a.remove, .woocommerce-mini-cart .woocommerce-cart-form__cart-item .product-remove > a", function (t) {
            t.preventDefault();
            var n = e(this), a = e(this).attr("data-product_id"), o = e(this).attr("data-cart_item_key"),
                i = e(this).parents(".mini_cart_item, .woocommerce-cart-form__cart-item");
            e.ajax({
                type: "post",
                dataType: "json",
                url: window.wc_add_to_cart_params.ajax_url,
                data: {action: "product_remove", product_id: a, cart_item_key: o},
                beforeSend: function () {
                    i.css("pointer-events", "none").css("opacity", "0.5"), e("body").css("cursor", "wait")
                },
                complete: function () {
                    e("body").css("cursor", "default")
                },
                success: function (t) {
                    t && t.fragments ? e(document.body).trigger("removed_from_cart", [t.fragments, t.cart_hash, n]) : window.location = n.attr("href")
                },
                error: function () {
                    window.location = n.attr("href")
                }
            })
        }), e(document).on("change", ".woocommerce-cart-form__cart-item .vamtam-quantity > select", function (t) {
            t.preventDefault();
            var n = e(".woocommerce-cart").length, a = e(this).val(), o = e(this).attr("data-product_id"),
                i = e(this).attr("data-cart_item_key"),
                r = e(this).parents(".mini_cart_item, .woocommerce-cart-form__cart-item");
            if (n) {
                var s = e('input[type="submit"][name="update_cart"]');
                return s.prop("disabled", !1), void s.trigger("click")
            }
            e.ajax({
                type: "post",
                dataType: "json",
                url: window.wc_add_to_cart_params.ajax_url,
                data: {action: "update_item_from_cart", product_id: o, cart_item_key: i, product_quantity: a},
                beforeSend: function () {
                    r.css("pointer-events", "none").css("opacity", "0.5"), e("body").css("cursor", "wait")
                },
                complete: function () {
                    r.css("pointer-events", "auto").css("opacity", "1"), e("body").css("cursor", "default")
                },
                success: function (t) {
                    t && t.fragments && e(document.body).trigger("wc_fragment_refresh")
                },
                error: function () {
                }
            })
        }), window.addEventListener("resize", function () {
            window.VAMTAM.debounce(d, 300)
        }), window.addEventListener("load", function () {
            i && (u(), d(), c())
        })
    })
}(jQuery), function (e, t) {
    "use strict";
    window.VAMTAM = window.VAMTAM || {}, window.VAMTAM.CUSTOM_ANIMATIONS = {}, e(function () {
        window.VAMTAM.CUSTOM_ANIMATIONS = {
            init: function () {
                this.VamtamCustomAnimations.init()
            }, VamtamCustomAnimations: {
                init: function () {
                    this.registerAnimations(), this.utils.watchScrollDirection()
                }, registerAnimations: function () {
                    var e = this;
                    ["stickyHeader"].forEach(function (t) {
                        e[t].apply(e)
                    })
                }, stickyHeader: function () {
                    var t = e(".vamtam-sticky-header"), n = this;
                    t.length && (t.length > 1 && (t = t[0]), function () {
                        var a, o = e(t).hasClass("vamtam-sticky-header--transparent-header"),
                            i = !window.elementorFrontend.isEditMode(), r = function () {
                                e(t).removeClass("vamtam-sticky-header--fixed-shown"), e(t).hasClass("vamtam-sticky-header--fixed-hidden") || e(t).addClass("vamtam-sticky-header--fixed-hidden"), a = "fixedHiddenState"
                            }, s = function () {
                                e(t).removeClass("vamtam-sticky-header--fixed-shown"), e(t).removeClass("vamtam-sticky-header--fixed-hidden"), a = "noAnimState"
                            };

                        function c() {
                            if (i) {
                                var n = e(t).innerHeight();
                                e(t).css("margin-bottom", "-" + n + "px"), e(t).next(".vamtam-prevent-scroll-jumps").css("padding-top", n + "px")
                            }
                        }

                        i && e(t).after('<div class="vamtam-prevent-scroll-jumps"></div>'), c(), window.pageYOffset >= 300 && r(), window.addEventListener("scroll", function (i) {
                            c();
                            var d = window.VAMTAM.debounce(function () {
                                if ("#document" === i.target.nodeName) {
                                    var c = n.utils.getScrollDirection();
                                    if ("up" === c) return void (window.pageYOffset >= 300 ? "fixedShownState" !== a && (e(t).removeClass("vamtam-sticky-header--fixed-hidden"), e(t).hasClass("vamtam-sticky-header--fixed-shown") || e(t).addClass("vamtam-sticky-header--fixed-shown"), a = "fixedShownState") : "noAnimState" !== a && s());
                                    if ("down" === c && (window.pageYOffset >= 300 || o)) {
                                        var d = !e(t).find(".elementor-menu-cart--shown").length;
                                        "fixedHiddenState" !== a && d && r()
                                    }
                                }
                            }, 500);
                            window.VAMTAM.isMaxDeviceWidth() ? requestAnimationFrame(d) : "noAnimState" !== a && s()
                        })
                    }())
                }, observedAnims: function () {
                    var t = "vamtam-animate", n = document.querySelectorAll(".vamtam-observe");
                    if (n.length) {
                        var a, o = function (n, a) {
                            n.forEach(function (n) {
                                var o = !1, i = n.target, r = i && e(i);
                                n.isIntersecting && (o = !0), o ? (r.hasClass(t) || (r.addClass(t), r.trigger("vamtam:animate")), r.hasClass("vamtam-looped") || a && a.unobserve && a.unobserve(i)) : r.hasClass(t) && r.removeClass(t)
                            })
                        };
                        n.forEach(function (n) {
                            e(n).removeClass(t), a || (a = new IntersectionObserver(o)), a.observe(n)
                        })
                    }
                }, utils: {
                    getAdminBarHeight: function () {
                        return window.VAMTAM.adminBarHeight
                    }, watchScrollDirection: function () {
                        var e = function () {
                            return this.lastScrollTop = 0, this.utils = this, {
                                init: function () {
                                }, measure: function (e) {
                                    this.direction = e > this.lastScrollTop ? "down" : "up"
                                }.bind(this), mutate: function (e) {
                                    this.utils.getScrollDirection = function () {
                                        return this.direction
                                    }, this.lastScrollTop = e <= 0 ? 0 : e
                                }.bind(this)
                            }
                        }.bind(this);
                        window.VAMTAM.addScrollHandler(e())
                    }
                }
            }
        }, window.VAMTAM.CUSTOM_ANIMATIONS.init()
    })
}(jQuery);